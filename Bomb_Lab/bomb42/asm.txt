
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000036d4 memsz 0x000036d4 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002c64 vaddr 0x0804ac64 paddr 0x0804ac64 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a244
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000018c2  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a244  0804a244  00002244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000a01  0804a260  0804a260  00002260  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ac64  0804ac64  00002c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000954  0804ad80  0804ad80  00002d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a244 l    d  .fini	00000000              .fini
0804a260 l    d  .rodata	00000000              .rodata
0804ac64 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ad80 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a4a0 l     O .rodata	00000040              array.3266
00000000 l    df *ABS*	00000000              support.c
08049197 l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
080496b3 l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b6d0 l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ac64 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a240 g     F .text	00000002              __libc_csu_fini
080493bc g     F .text	00000045              skip
0804965a g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a244 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048da0 g     F .text	00000164              phase_5
08049382 g     F .text	00000002              initialize_bomb_solve
08048fb9 g     F .text	00000048              phase_7
08049384 g     F .text	00000038              blank_line
08049152 g     F .text	00000045              phase_9
08049787 g     F .text	000007ca              submitr
08048caa g     F .text	00000092              phase_3
08048c2d g     F .text	0000005c              phase_1
080491f1 g     F .text	0000001f              invalid_phase
08049f86 g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
080494e9 g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
08049101 g     F .text	00000051              fun9
0804a264 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
08049210 g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a1e0 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048f04 g     F .text	00000043              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a260 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
08049690 g     F .text	00000023              sigalrm_handler
08049f51 g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
08049561 g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
0804922f g     F .text	00000065              strings_not_equal
08048d3c g     F .text	00000064              phase_4
08049001 g     F .text	00000100              phase_8
08048f47 g     F .text	00000072              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a158 g     F .text	0000007c              driver_post
08049401 g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
08049526 g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
08049294 g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 40 a2 04 08       	push   $0x804a240
 8048990:	68 e0 a1 04 08       	push   $0x804a1e0
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 68 a2 04 08       	push   $0x804a268
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 6a a2 04 08       	push   $0x804a26a
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 87 a2 04 08       	push   $0x804a287
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 94 07 00 00       	call   8049294 <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 f8 a2 04 08       	push   $0x804a2f8
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 34 a3 04 08 	movl   $0x804a334,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 43 0a 00 00       	call   8049561 <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 2f 0b 00 00       	call   804965a <phase_defused>
 8048b2b:	c7 04 24 60 a3 04 08 	movl   $0x804a360,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 25 0a 00 00       	call   8049561 <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 11 0b 00 00       	call   804965a <phase_defused>
 8048b49:	c7 04 24 a1 a2 04 08 	movl   $0x804a2a1,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 07 0a 00 00       	call   8049561 <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 f3 0a 00 00       	call   804965a <phase_defused>
 8048b67:	c7 04 24 bf a2 04 08 	movl   $0x804a2bf,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 e9 09 00 00       	call   8049561 <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 bc 01 00 00       	call   8048d3c <phase_4>
 8048b80:	e8 d5 0a 00 00       	call   804965a <phase_defused>
 8048b85:	c7 04 24 8c a3 04 08 	movl   $0x804a38c,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 cb 09 00 00       	call   8049561 <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 02 02 00 00       	call   8048da0 <phase_5>
 8048b9e:	e8 b7 0a 00 00       	call   804965a <phase_defused>
 8048ba3:	c7 04 24 d0 a2 04 08 	movl   $0x804a2d0,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 ad 09 00 00       	call   8049561 <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 8b 03 00 00       	call   8048f47 <phase_6>
 8048bbc:	e8 99 0a 00 00       	call   804965a <phase_defused>
 8048bc1:	c7 04 24 b0 a3 04 08 	movl   $0x804a3b0,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 8f 09 00 00       	call   8049561 <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 df 03 00 00       	call   8048fb9 <phase_7>
 8048bda:	e8 7b 0a 00 00       	call   804965a <phase_defused>
 8048bdf:	c7 04 24 d0 a3 04 08 	movl   $0x804a3d0,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 71 09 00 00       	call   8049561 <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 09 04 00 00       	call   8049001 <phase_8>
 8048bf8:	e8 5d 0a 00 00       	call   804965a <phase_defused>
 8048bfd:	c7 04 24 ee a2 04 08 	movl   $0x804a2ee,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 53 09 00 00       	call   8049561 <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 3c 05 00 00       	call   8049152 <phase_9>
 8048c16:	e8 3f 0a 00 00       	call   804965a <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 f5 a3 04 08       	push   $0x804a3f5
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 85 08 00 00       	call   80494e9 <explode_bomb>
 8048c64:	81 7c 24 08 e2 02 00 	cmpl   $0x2e2,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 76 08 00 00       	call   80494e9 <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 f8 a3 04 08       	push   $0x804a3f8
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 95 05 00 00       	call   804922f <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 43 08 00 00       	call   80494e9 <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 30 a4 04 08       	push   $0x804a430
 8048cb2:	e8 59 05 00 00       	call   8049210 <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 54 68 65 20    	movl   $0x20656854,(%eax)
 8048cc8:	c7 40 04 6d 6f 6f 6e 	movl   $0x6e6f6f6d,0x4(%eax)
 8048ccf:	c7 40 08 20 75 6e 69 	movl   $0x696e7520,0x8(%eax)
 8048cd6:	c7 40 0c 74 20 77 69 	movl   $0x69772074,0xc(%eax)
 8048cdd:	c7 40 10 6c 6c 20 62 	movl   $0x62206c6c,0x10(%eax)
 8048ce4:	c7 40 14 65 20 64 69 	movl   $0x69642065,0x14(%eax)
 8048ceb:	c7 40 18 76 69 64 65 	movl   $0x65646976,0x18(%eax)
 8048cf2:	c7 40 1c 64 20 69 6e 	movl   $0x6e692064,0x1c(%eax)
 8048cf9:	c7 40 20 74 6f 20 74 	movl   $0x74206f74,0x20(%eax)
 8048d00:	c7 40 24 77 6f 20 64 	movl   $0x64206f77,0x24(%eax)
 8048d07:	c7 40 28 69 76 69 73 	movl   $0x73697669,0x28(%eax)
 8048d0e:	c7 40 2c 69 6f 6e 73 	movl   $0x736e6f69,0x2c(%eax)
 8048d15:	66 c7 40 30 2e 00    	movw   $0x2e,0x30(%eax)
 8048d1b:	c6 40 29 75          	movb   $0x75,0x29(%eax)
 8048d1f:	83 c4 08             	add    $0x8,%esp
 8048d22:	50                   	push   %eax
 8048d23:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d27:	e8 03 05 00 00       	call   804922f <strings_not_equal>
 8048d2c:	83 c4 10             	add    $0x10,%esp
 8048d2f:	85 c0                	test   %eax,%eax
 8048d31:	74 05                	je     8048d38 <phase_3+0x8e>
 8048d33:	e8 b1 07 00 00       	call   80494e9 <explode_bomb>
 8048d38:	83 c4 0c             	add    $0xc,%esp
 8048d3b:	c3                   	ret    

08048d3c <phase_4>:
 8048d3c:	56                   	push   %esi
 8048d3d:	53                   	push   %ebx
 8048d3e:	83 ec 2c             	sub    $0x2c,%esp
 8048d41:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d47:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d4b:	31 c0                	xor    %eax,%eax
 8048d4d:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d51:	50                   	push   %eax
 8048d52:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d56:	e8 cb 07 00 00       	call   8049526 <read_six_numbers>
 8048d5b:	83 c4 10             	add    $0x10,%esp
 8048d5e:	83 7c 24 04 04       	cmpl   $0x4,0x4(%esp)
 8048d63:	74 05                	je     8048d6a <phase_4+0x2e>
 8048d65:	e8 7f 07 00 00       	call   80494e9 <explode_bomb>
 8048d6a:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048d6e:	8d 74 24 18          	lea    0x18(%esp),%esi
 8048d72:	8b 03                	mov    (%ebx),%eax
 8048d74:	8d 04 40             	lea    (%eax,%eax,2),%eax
 8048d77:	39 43 04             	cmp    %eax,0x4(%ebx)
 8048d7a:	74 05                	je     8048d81 <phase_4+0x45>
 8048d7c:	e8 68 07 00 00       	call   80494e9 <explode_bomb>
 8048d81:	83 c3 04             	add    $0x4,%ebx
 8048d84:	39 f3                	cmp    %esi,%ebx
 8048d86:	75 ea                	jne    8048d72 <phase_4+0x36>
 8048d88:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d8c:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d93:	74 05                	je     8048d9a <phase_4+0x5e>
 8048d95:	e8 66 fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d9a:	83 c4 24             	add    $0x24,%esp
 8048d9d:	5b                   	pop    %ebx
 8048d9e:	5e                   	pop    %esi
 8048d9f:	c3                   	ret    

08048da0 <phase_5>:
 8048da0:	83 ec 28             	sub    $0x28,%esp
 8048da3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048da9:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048dad:	31 c0                	xor    %eax,%eax
 8048daf:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048db3:	50                   	push   %eax
 8048db4:	8d 44 24 13          	lea    0x13(%esp),%eax
 8048db8:	50                   	push   %eax
 8048db9:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048dbd:	50                   	push   %eax
 8048dbe:	68 ef a3 04 08       	push   $0x804a3ef
 8048dc3:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048dc7:	e8 e4 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048dcc:	83 c4 20             	add    $0x20,%esp
 8048dcf:	83 f8 02             	cmp    $0x2,%eax
 8048dd2:	7f 05                	jg     8048dd9 <phase_5+0x39>
 8048dd4:	e8 10 07 00 00       	call   80494e9 <explode_bomb>
 8048dd9:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dde:	0f 87 f5 00 00 00    	ja     8048ed9 <phase_5+0x139>
 8048de4:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048de8:	ff 24 85 80 a4 04 08 	jmp    *0x804a480(,%eax,4)
 8048def:	b8 61 00 00 00       	mov    $0x61,%eax
 8048df4:	81 7c 24 08 11 02 00 	cmpl   $0x211,0x8(%esp)
 8048dfb:	00 
 8048dfc:	0f 84 e1 00 00 00    	je     8048ee3 <phase_5+0x143>
 8048e02:	e8 e2 06 00 00       	call   80494e9 <explode_bomb>
 8048e07:	b8 61 00 00 00       	mov    $0x61,%eax
 8048e0c:	e9 d2 00 00 00       	jmp    8048ee3 <phase_5+0x143>
 8048e11:	b8 6d 00 00 00       	mov    $0x6d,%eax
 8048e16:	81 7c 24 08 56 03 00 	cmpl   $0x356,0x8(%esp)
 8048e1d:	00 
 8048e1e:	0f 84 bf 00 00 00    	je     8048ee3 <phase_5+0x143>
 8048e24:	e8 c0 06 00 00       	call   80494e9 <explode_bomb>
 8048e29:	b8 6d 00 00 00       	mov    $0x6d,%eax
 8048e2e:	e9 b0 00 00 00       	jmp    8048ee3 <phase_5+0x143>
 8048e33:	b8 6f 00 00 00       	mov    $0x6f,%eax
 8048e38:	81 7c 24 08 b3 03 00 	cmpl   $0x3b3,0x8(%esp)
 8048e3f:	00 
 8048e40:	0f 84 9d 00 00 00    	je     8048ee3 <phase_5+0x143>
 8048e46:	e8 9e 06 00 00       	call   80494e9 <explode_bomb>
 8048e4b:	b8 6f 00 00 00       	mov    $0x6f,%eax
 8048e50:	e9 8e 00 00 00       	jmp    8048ee3 <phase_5+0x143>
 8048e55:	b8 78 00 00 00       	mov    $0x78,%eax
 8048e5a:	81 7c 24 08 9b 00 00 	cmpl   $0x9b,0x8(%esp)
 8048e61:	00 
 8048e62:	74 7f                	je     8048ee3 <phase_5+0x143>
 8048e64:	e8 80 06 00 00       	call   80494e9 <explode_bomb>
 8048e69:	b8 78 00 00 00       	mov    $0x78,%eax
 8048e6e:	eb 73                	jmp    8048ee3 <phase_5+0x143>
 8048e70:	b8 63 00 00 00       	mov    $0x63,%eax
 8048e75:	81 7c 24 08 88 00 00 	cmpl   $0x88,0x8(%esp)
 8048e7c:	00 
 8048e7d:	74 64                	je     8048ee3 <phase_5+0x143>
 8048e7f:	e8 65 06 00 00       	call   80494e9 <explode_bomb>
 8048e84:	b8 63 00 00 00       	mov    $0x63,%eax
 8048e89:	eb 58                	jmp    8048ee3 <phase_5+0x143>
 8048e8b:	b8 70 00 00 00       	mov    $0x70,%eax
 8048e90:	81 7c 24 08 e2 02 00 	cmpl   $0x2e2,0x8(%esp)
 8048e97:	00 
 8048e98:	74 49                	je     8048ee3 <phase_5+0x143>
 8048e9a:	e8 4a 06 00 00       	call   80494e9 <explode_bomb>
 8048e9f:	b8 70 00 00 00       	mov    $0x70,%eax
 8048ea4:	eb 3d                	jmp    8048ee3 <phase_5+0x143>
 8048ea6:	b8 62 00 00 00       	mov    $0x62,%eax
 8048eab:	83 7c 24 08 6c       	cmpl   $0x6c,0x8(%esp)
 8048eb0:	74 31                	je     8048ee3 <phase_5+0x143>
 8048eb2:	e8 32 06 00 00       	call   80494e9 <explode_bomb>
 8048eb7:	b8 62 00 00 00       	mov    $0x62,%eax
 8048ebc:	eb 25                	jmp    8048ee3 <phase_5+0x143>
 8048ebe:	b8 61 00 00 00       	mov    $0x61,%eax
 8048ec3:	81 7c 24 08 20 01 00 	cmpl   $0x120,0x8(%esp)
 8048eca:	00 
 8048ecb:	74 16                	je     8048ee3 <phase_5+0x143>
 8048ecd:	e8 17 06 00 00       	call   80494e9 <explode_bomb>
 8048ed2:	b8 61 00 00 00       	mov    $0x61,%eax
 8048ed7:	eb 0a                	jmp    8048ee3 <phase_5+0x143>
 8048ed9:	e8 0b 06 00 00       	call   80494e9 <explode_bomb>
 8048ede:	b8 6a 00 00 00       	mov    $0x6a,%eax
 8048ee3:	3a 44 24 03          	cmp    0x3(%esp),%al
 8048ee7:	74 05                	je     8048eee <phase_5+0x14e>
 8048ee9:	e8 fb 05 00 00       	call   80494e9 <explode_bomb>
 8048eee:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048ef2:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048ef9:	74 05                	je     8048f00 <phase_5+0x160>
 8048efb:	e8 00 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f00:	83 c4 1c             	add    $0x1c,%esp
 8048f03:	c3                   	ret    

08048f04 <func6>:
 8048f04:	57                   	push   %edi
 8048f05:	56                   	push   %esi
 8048f06:	53                   	push   %ebx
 8048f07:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048f0b:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8048f0f:	85 db                	test   %ebx,%ebx
 8048f11:	7e 2b                	jle    8048f3e <func6+0x3a>
 8048f13:	89 f8                	mov    %edi,%eax
 8048f15:	83 fb 01             	cmp    $0x1,%ebx
 8048f18:	74 29                	je     8048f43 <func6+0x3f>
 8048f1a:	83 ec 08             	sub    $0x8,%esp
 8048f1d:	57                   	push   %edi
 8048f1e:	8d 43 ff             	lea    -0x1(%ebx),%eax
 8048f21:	50                   	push   %eax
 8048f22:	e8 dd ff ff ff       	call   8048f04 <func6>
 8048f27:	83 c4 08             	add    $0x8,%esp
 8048f2a:	8d 34 07             	lea    (%edi,%eax,1),%esi
 8048f2d:	57                   	push   %edi
 8048f2e:	83 eb 02             	sub    $0x2,%ebx
 8048f31:	53                   	push   %ebx
 8048f32:	e8 cd ff ff ff       	call   8048f04 <func6>
 8048f37:	83 c4 10             	add    $0x10,%esp
 8048f3a:	01 f0                	add    %esi,%eax
 8048f3c:	eb 05                	jmp    8048f43 <func6+0x3f>
 8048f3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f43:	5b                   	pop    %ebx
 8048f44:	5e                   	pop    %esi
 8048f45:	5f                   	pop    %edi
 8048f46:	c3                   	ret    

08048f47 <phase_6>:
 8048f47:	83 ec 1c             	sub    $0x1c,%esp
 8048f4a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f50:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048f54:	31 c0                	xor    %eax,%eax
 8048f56:	8d 44 24 04          	lea    0x4(%esp),%eax
 8048f5a:	50                   	push   %eax
 8048f5b:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048f5f:	50                   	push   %eax
 8048f60:	68 c1 a6 04 08       	push   $0x804a6c1
 8048f65:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048f69:	e8 42 f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048f6e:	83 c4 10             	add    $0x10,%esp
 8048f71:	83 f8 02             	cmp    $0x2,%eax
 8048f74:	75 0c                	jne    8048f82 <phase_6+0x3b>
 8048f76:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048f7a:	83 e8 02             	sub    $0x2,%eax
 8048f7d:	83 f8 02             	cmp    $0x2,%eax
 8048f80:	76 05                	jbe    8048f87 <phase_6+0x40>
 8048f82:	e8 62 05 00 00       	call   80494e9 <explode_bomb>
 8048f87:	83 ec 08             	sub    $0x8,%esp
 8048f8a:	ff 74 24 0c          	pushl  0xc(%esp)
 8048f8e:	6a 0b                	push   $0xb
 8048f90:	e8 6f ff ff ff       	call   8048f04 <func6>
 8048f95:	83 c4 10             	add    $0x10,%esp
 8048f98:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048f9c:	74 05                	je     8048fa3 <phase_6+0x5c>
 8048f9e:	e8 46 05 00 00       	call   80494e9 <explode_bomb>
 8048fa3:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048fa7:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048fae:	74 05                	je     8048fb5 <phase_6+0x6e>
 8048fb0:	e8 4b f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048fb5:	83 c4 1c             	add    $0x1c,%esp
 8048fb8:	c3                   	ret    

08048fb9 <phase_7>:
 8048fb9:	53                   	push   %ebx
 8048fba:	83 ec 14             	sub    $0x14,%esp
 8048fbd:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048fc1:	53                   	push   %ebx
 8048fc2:	e8 49 02 00 00       	call   8049210 <string_length>
 8048fc7:	83 c4 10             	add    $0x10,%esp
 8048fca:	83 f8 06             	cmp    $0x6,%eax
 8048fcd:	74 05                	je     8048fd4 <phase_7+0x1b>
 8048fcf:	e8 15 05 00 00       	call   80494e9 <explode_bomb>
 8048fd4:	89 d8                	mov    %ebx,%eax
 8048fd6:	83 c3 06             	add    $0x6,%ebx
 8048fd9:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048fde:	0f b6 10             	movzbl (%eax),%edx
 8048fe1:	83 e2 0f             	and    $0xf,%edx
 8048fe4:	03 0c 95 a0 a4 04 08 	add    0x804a4a0(,%edx,4),%ecx
 8048feb:	83 c0 01             	add    $0x1,%eax
 8048fee:	39 d8                	cmp    %ebx,%eax
 8048ff0:	75 ec                	jne    8048fde <phase_7+0x25>
 8048ff2:	83 f9 45             	cmp    $0x45,%ecx
 8048ff5:	74 05                	je     8048ffc <phase_7+0x43>
 8048ff7:	e8 ed 04 00 00       	call   80494e9 <explode_bomb>
 8048ffc:	83 c4 08             	add    $0x8,%esp
 8048fff:	5b                   	pop    %ebx
 8049000:	c3                   	ret    

08049001 <phase_8>:
 8049001:	56                   	push   %esi
 8049002:	53                   	push   %ebx
 8049003:	83 ec 4c             	sub    $0x4c,%esp
 8049006:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804900c:	89 44 24 44          	mov    %eax,0x44(%esp)
 8049010:	31 c0                	xor    %eax,%eax
 8049012:	8d 44 24 14          	lea    0x14(%esp),%eax
 8049016:	50                   	push   %eax
 8049017:	ff 74 24 5c          	pushl  0x5c(%esp)
 804901b:	e8 06 05 00 00       	call   8049526 <read_six_numbers>
 8049020:	83 c4 10             	add    $0x10,%esp
 8049023:	be 00 00 00 00       	mov    $0x0,%esi
 8049028:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 804902c:	83 e8 01             	sub    $0x1,%eax
 804902f:	83 f8 05             	cmp    $0x5,%eax
 8049032:	76 05                	jbe    8049039 <phase_8+0x38>
 8049034:	e8 b0 04 00 00       	call   80494e9 <explode_bomb>
 8049039:	83 c6 01             	add    $0x1,%esi
 804903c:	83 fe 06             	cmp    $0x6,%esi
 804903f:	74 1b                	je     804905c <phase_8+0x5b>
 8049041:	89 f3                	mov    %esi,%ebx
 8049043:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8049047:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 804904b:	75 05                	jne    8049052 <phase_8+0x51>
 804904d:	e8 97 04 00 00       	call   80494e9 <explode_bomb>
 8049052:	83 c3 01             	add    $0x1,%ebx
 8049055:	83 fb 05             	cmp    $0x5,%ebx
 8049058:	7e e9                	jle    8049043 <phase_8+0x42>
 804905a:	eb cc                	jmp    8049028 <phase_8+0x27>
 804905c:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8049060:	8d 5c 24 24          	lea    0x24(%esp),%ebx
 8049064:	b9 07 00 00 00       	mov    $0x7,%ecx
 8049069:	89 ca                	mov    %ecx,%edx
 804906b:	2b 10                	sub    (%eax),%edx
 804906d:	89 10                	mov    %edx,(%eax)
 804906f:	83 c0 04             	add    $0x4,%eax
 8049072:	39 c3                	cmp    %eax,%ebx
 8049074:	75 f3                	jne    8049069 <phase_8+0x68>
 8049076:	bb 00 00 00 00       	mov    $0x0,%ebx
 804907b:	eb 16                	jmp    8049093 <phase_8+0x92>
 804907d:	8b 52 08             	mov    0x8(%edx),%edx
 8049080:	83 c0 01             	add    $0x1,%eax
 8049083:	39 c8                	cmp    %ecx,%eax
 8049085:	75 f6                	jne    804907d <phase_8+0x7c>
 8049087:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 804908b:	83 c3 01             	add    $0x1,%ebx
 804908e:	83 fb 06             	cmp    $0x6,%ebx
 8049091:	74 17                	je     80490aa <phase_8+0xa9>
 8049093:	89 de                	mov    %ebx,%esi
 8049095:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8049099:	b8 01 00 00 00       	mov    $0x1,%eax
 804909e:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 80490a3:	83 f9 01             	cmp    $0x1,%ecx
 80490a6:	7f d5                	jg     804907d <phase_8+0x7c>
 80490a8:	eb dd                	jmp    8049087 <phase_8+0x86>
 80490aa:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 80490ae:	8d 44 24 24          	lea    0x24(%esp),%eax
 80490b2:	8d 74 24 38          	lea    0x38(%esp),%esi
 80490b6:	89 d9                	mov    %ebx,%ecx
 80490b8:	8b 50 04             	mov    0x4(%eax),%edx
 80490bb:	89 51 08             	mov    %edx,0x8(%ecx)
 80490be:	83 c0 04             	add    $0x4,%eax
 80490c1:	89 d1                	mov    %edx,%ecx
 80490c3:	39 c6                	cmp    %eax,%esi
 80490c5:	75 f1                	jne    80490b8 <phase_8+0xb7>
 80490c7:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 80490ce:	be 05 00 00 00       	mov    $0x5,%esi
 80490d3:	8b 43 08             	mov    0x8(%ebx),%eax
 80490d6:	8b 00                	mov    (%eax),%eax
 80490d8:	39 03                	cmp    %eax,(%ebx)
 80490da:	7d 05                	jge    80490e1 <phase_8+0xe0>
 80490dc:	e8 08 04 00 00       	call   80494e9 <explode_bomb>
 80490e1:	8b 5b 08             	mov    0x8(%ebx),%ebx
 80490e4:	83 ee 01             	sub    $0x1,%esi
 80490e7:	75 ea                	jne    80490d3 <phase_8+0xd2>
 80490e9:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80490ed:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80490f4:	74 05                	je     80490fb <phase_8+0xfa>
 80490f6:	e8 05 f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80490fb:	83 c4 44             	add    $0x44,%esp
 80490fe:	5b                   	pop    %ebx
 80490ff:	5e                   	pop    %esi
 8049100:	c3                   	ret    

08049101 <fun9>:
 8049101:	53                   	push   %ebx
 8049102:	83 ec 08             	sub    $0x8,%esp
 8049105:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049109:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 804910d:	85 d2                	test   %edx,%edx
 804910f:	74 37                	je     8049148 <fun9+0x47>
 8049111:	8b 1a                	mov    (%edx),%ebx
 8049113:	39 cb                	cmp    %ecx,%ebx
 8049115:	7e 13                	jle    804912a <fun9+0x29>
 8049117:	83 ec 08             	sub    $0x8,%esp
 804911a:	51                   	push   %ecx
 804911b:	ff 72 04             	pushl  0x4(%edx)
 804911e:	e8 de ff ff ff       	call   8049101 <fun9>
 8049123:	83 c4 10             	add    $0x10,%esp
 8049126:	01 c0                	add    %eax,%eax
 8049128:	eb 23                	jmp    804914d <fun9+0x4c>
 804912a:	b8 00 00 00 00       	mov    $0x0,%eax
 804912f:	39 cb                	cmp    %ecx,%ebx
 8049131:	74 1a                	je     804914d <fun9+0x4c>
 8049133:	83 ec 08             	sub    $0x8,%esp
 8049136:	51                   	push   %ecx
 8049137:	ff 72 08             	pushl  0x8(%edx)
 804913a:	e8 c2 ff ff ff       	call   8049101 <fun9>
 804913f:	83 c4 10             	add    $0x10,%esp
 8049142:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8049146:	eb 05                	jmp    804914d <fun9+0x4c>
 8049148:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804914d:	83 c4 08             	add    $0x8,%esp
 8049150:	5b                   	pop    %ebx
 8049151:	c3                   	ret    

08049152 <phase_9>:
 8049152:	53                   	push   %ebx
 8049153:	83 ec 0c             	sub    $0xc,%esp
 8049156:	6a 0a                	push   $0xa
 8049158:	6a 00                	push   $0x0
 804915a:	ff 74 24 1c          	pushl  0x1c(%esp)
 804915e:	e8 bd f7 ff ff       	call   8048920 <strtol@plt>
 8049163:	89 c3                	mov    %eax,%ebx
 8049165:	8d 40 ff             	lea    -0x1(%eax),%eax
 8049168:	83 c4 10             	add    $0x10,%esp
 804916b:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 8049170:	76 05                	jbe    8049177 <phase_9+0x25>
 8049172:	e8 72 03 00 00       	call   80494e9 <explode_bomb>
 8049177:	83 ec 08             	sub    $0x8,%esp
 804917a:	53                   	push   %ebx
 804917b:	68 a0 d0 04 08       	push   $0x804d0a0
 8049180:	e8 7c ff ff ff       	call   8049101 <fun9>
 8049185:	83 c4 10             	add    $0x10,%esp
 8049188:	83 f8 07             	cmp    $0x7,%eax
 804918b:	74 05                	je     8049192 <phase_9+0x40>
 804918d:	e8 57 03 00 00       	call   80494e9 <explode_bomb>
 8049192:	83 c4 08             	add    $0x8,%esp
 8049195:	5b                   	pop    %ebx
 8049196:	c3                   	ret    

08049197 <sig_handler>:
 8049197:	83 ec 18             	sub    $0x18,%esp
 804919a:	68 e0 a4 04 08       	push   $0x804a4e0
 804919f:	e8 ac f6 ff ff       	call   8048850 <puts@plt>
 80491a4:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80491ab:	e8 30 f6 ff ff       	call   80487e0 <sleep@plt>
 80491b0:	83 c4 08             	add    $0x8,%esp
 80491b3:	68 3d a6 04 08       	push   $0x804a63d
 80491b8:	6a 01                	push   $0x1
 80491ba:	e8 21 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 80491bf:	83 c4 04             	add    $0x4,%esp
 80491c2:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 80491c8:	e8 e3 f5 ff ff       	call   80487b0 <fflush@plt>
 80491cd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80491d4:	e8 07 f6 ff ff       	call   80487e0 <sleep@plt>
 80491d9:	c7 04 24 45 a6 04 08 	movl   $0x804a645,(%esp)
 80491e0:	e8 6b f6 ff ff       	call   8048850 <puts@plt>
 80491e5:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 80491ec:	e8 7f f6 ff ff       	call   8048870 <exit@plt>

080491f1 <invalid_phase>:
 80491f1:	83 ec 10             	sub    $0x10,%esp
 80491f4:	ff 74 24 14          	pushl  0x14(%esp)
 80491f8:	68 4d a6 04 08       	push   $0x804a64d
 80491fd:	6a 01                	push   $0x1
 80491ff:	e8 dc f6 ff ff       	call   80488e0 <__printf_chk@plt>
 8049204:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804920b:	e8 60 f6 ff ff       	call   8048870 <exit@plt>

08049210 <string_length>:
 8049210:	8b 54 24 04          	mov    0x4(%esp),%edx
 8049214:	80 3a 00             	cmpb   $0x0,(%edx)
 8049217:	74 10                	je     8049229 <string_length+0x19>
 8049219:	b8 00 00 00 00       	mov    $0x0,%eax
 804921e:	83 c0 01             	add    $0x1,%eax
 8049221:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8049225:	75 f7                	jne    804921e <string_length+0xe>
 8049227:	f3 c3                	repz ret 
 8049229:	b8 00 00 00 00       	mov    $0x0,%eax
 804922e:	c3                   	ret    

0804922f <strings_not_equal>:
 804922f:	57                   	push   %edi
 8049230:	56                   	push   %esi
 8049231:	53                   	push   %ebx
 8049232:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049236:	8b 74 24 14          	mov    0x14(%esp),%esi
 804923a:	53                   	push   %ebx
 804923b:	e8 d0 ff ff ff       	call   8049210 <string_length>
 8049240:	89 c7                	mov    %eax,%edi
 8049242:	89 34 24             	mov    %esi,(%esp)
 8049245:	e8 c6 ff ff ff       	call   8049210 <string_length>
 804924a:	83 c4 04             	add    $0x4,%esp
 804924d:	ba 01 00 00 00       	mov    $0x1,%edx
 8049252:	39 c7                	cmp    %eax,%edi
 8049254:	75 38                	jne    804928e <strings_not_equal+0x5f>
 8049256:	0f b6 03             	movzbl (%ebx),%eax
 8049259:	84 c0                	test   %al,%al
 804925b:	74 1e                	je     804927b <strings_not_equal+0x4c>
 804925d:	3a 06                	cmp    (%esi),%al
 804925f:	74 06                	je     8049267 <strings_not_equal+0x38>
 8049261:	eb 1f                	jmp    8049282 <strings_not_equal+0x53>
 8049263:	3a 06                	cmp    (%esi),%al
 8049265:	75 22                	jne    8049289 <strings_not_equal+0x5a>
 8049267:	83 c3 01             	add    $0x1,%ebx
 804926a:	83 c6 01             	add    $0x1,%esi
 804926d:	0f b6 03             	movzbl (%ebx),%eax
 8049270:	84 c0                	test   %al,%al
 8049272:	75 ef                	jne    8049263 <strings_not_equal+0x34>
 8049274:	ba 00 00 00 00       	mov    $0x0,%edx
 8049279:	eb 13                	jmp    804928e <strings_not_equal+0x5f>
 804927b:	ba 00 00 00 00       	mov    $0x0,%edx
 8049280:	eb 0c                	jmp    804928e <strings_not_equal+0x5f>
 8049282:	ba 01 00 00 00       	mov    $0x1,%edx
 8049287:	eb 05                	jmp    804928e <strings_not_equal+0x5f>
 8049289:	ba 01 00 00 00       	mov    $0x1,%edx
 804928e:	89 d0                	mov    %edx,%eax
 8049290:	5b                   	pop    %ebx
 8049291:	5e                   	pop    %esi
 8049292:	5f                   	pop    %edi
 8049293:	c3                   	ret    

08049294 <initialize_bomb>:
 8049294:	56                   	push   %esi
 8049295:	53                   	push   %ebx
 8049296:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 804929c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80492a2:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 80492a9:	31 c0                	xor    %eax,%eax
 80492ab:	68 97 91 04 08       	push   $0x8049197
 80492b0:	6a 02                	push   $0x2
 80492b2:	e8 19 f5 ff ff       	call   80487d0 <signal@plt>
 80492b7:	83 c4 08             	add    $0x8,%esp
 80492ba:	6a 40                	push   $0x40
 80492bc:	8d 44 24 18          	lea    0x18(%esp),%eax
 80492c0:	50                   	push   %eax
 80492c1:	e8 5a f5 ff ff       	call   8048820 <gethostname@plt>
 80492c6:	83 c4 10             	add    $0x10,%esp
 80492c9:	85 c0                	test   %eax,%eax
 80492cb:	75 14                	jne    80492e1 <initialize_bomb+0x4d>
 80492cd:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 80492d2:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 80492d7:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80492db:	85 c0                	test   %eax,%eax
 80492dd:	75 1b                	jne    80492fa <initialize_bomb+0x66>
 80492df:	eb 56                	jmp    8049337 <initialize_bomb+0xa3>
 80492e1:	83 ec 0c             	sub    $0xc,%esp
 80492e4:	68 18 a5 04 08       	push   $0x804a518
 80492e9:	e8 62 f5 ff ff       	call   8048850 <puts@plt>
 80492ee:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492f5:	e8 76 f5 ff ff       	call   8048870 <exit@plt>
 80492fa:	83 ec 08             	sub    $0x8,%esp
 80492fd:	56                   	push   %esi
 80492fe:	50                   	push   %eax
 80492ff:	e8 9c f5 ff ff       	call   80488a0 <strcasecmp@plt>
 8049304:	83 c4 10             	add    $0x10,%esp
 8049307:	85 c0                	test   %eax,%eax
 8049309:	74 45                	je     8049350 <initialize_bomb+0xbc>
 804930b:	83 c3 04             	add    $0x4,%ebx
 804930e:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8049311:	85 c0                	test   %eax,%eax
 8049313:	75 e5                	jne    80492fa <initialize_bomb+0x66>
 8049315:	eb 20                	jmp    8049337 <initialize_bomb+0xa3>
 8049317:	83 ec 04             	sub    $0x4,%esp
 804931a:	8d 44 24 50          	lea    0x50(%esp),%eax
 804931e:	50                   	push   %eax
 804931f:	68 5e a6 04 08       	push   $0x804a65e
 8049324:	6a 01                	push   $0x1
 8049326:	e8 b5 f5 ff ff       	call   80488e0 <__printf_chk@plt>
 804932b:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049332:	e8 39 f5 ff ff       	call   8048870 <exit@plt>
 8049337:	83 ec 0c             	sub    $0xc,%esp
 804933a:	68 50 a5 04 08       	push   $0x804a550
 804933f:	e8 0c f5 ff ff       	call   8048850 <puts@plt>
 8049344:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804934b:	e8 20 f5 ff ff       	call   8048870 <exit@plt>
 8049350:	83 ec 0c             	sub    $0xc,%esp
 8049353:	8d 44 24 58          	lea    0x58(%esp),%eax
 8049357:	50                   	push   %eax
 8049358:	e8 29 0c 00 00       	call   8049f86 <init_driver>
 804935d:	83 c4 10             	add    $0x10,%esp
 8049360:	85 c0                	test   %eax,%eax
 8049362:	78 b3                	js     8049317 <initialize_bomb+0x83>
 8049364:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 804936b:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049372:	74 05                	je     8049379 <initialize_bomb+0xe5>
 8049374:	e8 87 f4 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049379:	81 c4 54 20 00 00    	add    $0x2054,%esp
 804937f:	5b                   	pop    %ebx
 8049380:	5e                   	pop    %esi
 8049381:	c3                   	ret    

08049382 <initialize_bomb_solve>:
 8049382:	f3 c3                	repz ret 

08049384 <blank_line>:
 8049384:	56                   	push   %esi
 8049385:	53                   	push   %ebx
 8049386:	83 ec 04             	sub    $0x4,%esp
 8049389:	8b 74 24 10          	mov    0x10(%esp),%esi
 804938d:	eb 14                	jmp    80493a3 <blank_line+0x1f>
 804938f:	e8 bc f5 ff ff       	call   8048950 <__ctype_b_loc@plt>
 8049394:	83 c6 01             	add    $0x1,%esi
 8049397:	0f be db             	movsbl %bl,%ebx
 804939a:	8b 00                	mov    (%eax),%eax
 804939c:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 80493a1:	74 0e                	je     80493b1 <blank_line+0x2d>
 80493a3:	0f b6 1e             	movzbl (%esi),%ebx
 80493a6:	84 db                	test   %bl,%bl
 80493a8:	75 e5                	jne    804938f <blank_line+0xb>
 80493aa:	b8 01 00 00 00       	mov    $0x1,%eax
 80493af:	eb 05                	jmp    80493b6 <blank_line+0x32>
 80493b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80493b6:	83 c4 04             	add    $0x4,%esp
 80493b9:	5b                   	pop    %ebx
 80493ba:	5e                   	pop    %esi
 80493bb:	c3                   	ret    

080493bc <skip>:
 80493bc:	53                   	push   %ebx
 80493bd:	83 ec 08             	sub    $0x8,%esp
 80493c0:	83 ec 04             	sub    $0x4,%esp
 80493c3:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 80493c9:	6a 50                	push   $0x50
 80493cb:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80493d0:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80493d3:	c1 e0 04             	shl    $0x4,%eax
 80493d6:	05 00 d8 04 08       	add    $0x804d800,%eax
 80493db:	50                   	push   %eax
 80493dc:	e8 df f3 ff ff       	call   80487c0 <fgets@plt>
 80493e1:	89 c3                	mov    %eax,%ebx
 80493e3:	83 c4 10             	add    $0x10,%esp
 80493e6:	85 c0                	test   %eax,%eax
 80493e8:	74 10                	je     80493fa <skip+0x3e>
 80493ea:	83 ec 0c             	sub    $0xc,%esp
 80493ed:	50                   	push   %eax
 80493ee:	e8 91 ff ff ff       	call   8049384 <blank_line>
 80493f3:	83 c4 10             	add    $0x10,%esp
 80493f6:	85 c0                	test   %eax,%eax
 80493f8:	75 c6                	jne    80493c0 <skip+0x4>
 80493fa:	89 d8                	mov    %ebx,%eax
 80493fc:	83 c4 08             	add    $0x8,%esp
 80493ff:	5b                   	pop    %ebx
 8049400:	c3                   	ret    

08049401 <send_msg>:
 8049401:	57                   	push   %edi
 8049402:	53                   	push   %ebx
 8049403:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 8049409:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804940f:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 8049416:	31 c0                	xor    %eax,%eax
 8049418:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 804941e:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 8049422:	c1 e2 04             	shl    $0x4,%edx
 8049425:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 804942b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049430:	89 d7                	mov    %edx,%edi
 8049432:	f2 ae                	repnz scas %es:(%edi),%al
 8049434:	f7 d1                	not    %ecx
 8049436:	83 c1 63             	add    $0x63,%ecx
 8049439:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 804943f:	76 1b                	jbe    804945c <send_msg+0x5b>
 8049441:	83 ec 08             	sub    $0x8,%esp
 8049444:	68 88 a5 04 08       	push   $0x804a588
 8049449:	6a 01                	push   $0x1
 804944b:	e8 90 f4 ff ff       	call   80488e0 <__printf_chk@plt>
 8049450:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049457:	e8 14 f4 ff ff       	call   8048870 <exit@plt>
 804945c:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 8049463:	00 
 8049464:	b9 80 a6 04 08       	mov    $0x804a680,%ecx
 8049469:	b8 78 a6 04 08       	mov    $0x804a678,%eax
 804946e:	0f 44 c1             	cmove  %ecx,%eax
 8049471:	52                   	push   %edx
 8049472:	53                   	push   %ebx
 8049473:	50                   	push   %eax
 8049474:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 804947a:	68 89 a6 04 08       	push   $0x804a689
 804947f:	68 00 20 00 00       	push   $0x2000
 8049484:	6a 01                	push   $0x1
 8049486:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 804948a:	53                   	push   %ebx
 804948b:	e8 d0 f4 ff ff       	call   8048960 <__sprintf_chk@plt>
 8049490:	83 c4 20             	add    $0x20,%esp
 8049493:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 804949a:	50                   	push   %eax
 804949b:	6a 00                	push   $0x0
 804949d:	53                   	push   %ebx
 804949e:	68 a0 d1 04 08       	push   $0x804d1a0
 80494a3:	e8 b0 0c 00 00       	call   804a158 <driver_post>
 80494a8:	83 c4 10             	add    $0x10,%esp
 80494ab:	85 c0                	test   %eax,%eax
 80494ad:	79 1c                	jns    80494cb <send_msg+0xca>
 80494af:	83 ec 0c             	sub    $0xc,%esp
 80494b2:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 80494b9:	50                   	push   %eax
 80494ba:	e8 91 f3 ff ff       	call   8048850 <puts@plt>
 80494bf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494c6:	e8 a5 f3 ff ff       	call   8048870 <exit@plt>
 80494cb:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 80494d2:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80494d9:	74 05                	je     80494e0 <send_msg+0xdf>
 80494db:	e8 20 f3 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80494e0:	81 c4 14 40 00 00    	add    $0x4014,%esp
 80494e6:	5b                   	pop    %ebx
 80494e7:	5f                   	pop    %edi
 80494e8:	c3                   	ret    

080494e9 <explode_bomb>:
 80494e9:	83 ec 18             	sub    $0x18,%esp
 80494ec:	68 95 a6 04 08       	push   $0x804a695
 80494f1:	e8 5a f3 ff ff       	call   8048850 <puts@plt>
 80494f6:	c7 04 24 9e a6 04 08 	movl   $0x804a69e,(%esp)
 80494fd:	e8 4e f3 ff ff       	call   8048850 <puts@plt>
 8049502:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049509:	e8 f3 fe ff ff       	call   8049401 <send_msg>
 804950e:	c7 04 24 ac a5 04 08 	movl   $0x804a5ac,(%esp)
 8049515:	e8 36 f3 ff ff       	call   8048850 <puts@plt>
 804951a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049521:	e8 4a f3 ff ff       	call   8048870 <exit@plt>

08049526 <read_six_numbers>:
 8049526:	83 ec 0c             	sub    $0xc,%esp
 8049529:	8b 44 24 14          	mov    0x14(%esp),%eax
 804952d:	8d 50 14             	lea    0x14(%eax),%edx
 8049530:	52                   	push   %edx
 8049531:	8d 50 10             	lea    0x10(%eax),%edx
 8049534:	52                   	push   %edx
 8049535:	8d 50 0c             	lea    0xc(%eax),%edx
 8049538:	52                   	push   %edx
 8049539:	8d 50 08             	lea    0x8(%eax),%edx
 804953c:	52                   	push   %edx
 804953d:	8d 50 04             	lea    0x4(%eax),%edx
 8049540:	52                   	push   %edx
 8049541:	50                   	push   %eax
 8049542:	68 b5 a6 04 08       	push   $0x804a6b5
 8049547:	ff 74 24 2c          	pushl  0x2c(%esp)
 804954b:	e8 60 f3 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049550:	83 c4 20             	add    $0x20,%esp
 8049553:	83 f8 05             	cmp    $0x5,%eax
 8049556:	7f 05                	jg     804955d <read_six_numbers+0x37>
 8049558:	e8 8c ff ff ff       	call   80494e9 <explode_bomb>
 804955d:	83 c4 0c             	add    $0xc,%esp
 8049560:	c3                   	ret    

08049561 <read_line>:
 8049561:	57                   	push   %edi
 8049562:	56                   	push   %esi
 8049563:	53                   	push   %ebx
 8049564:	e8 53 fe ff ff       	call   80493bc <skip>
 8049569:	85 c0                	test   %eax,%eax
 804956b:	75 70                	jne    80495dd <read_line+0x7c>
 804956d:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8049572:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 8049578:	75 19                	jne    8049593 <read_line+0x32>
 804957a:	83 ec 0c             	sub    $0xc,%esp
 804957d:	68 c7 a6 04 08       	push   $0x804a6c7
 8049582:	e8 c9 f2 ff ff       	call   8048850 <puts@plt>
 8049587:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804958e:	e8 dd f2 ff ff       	call   8048870 <exit@plt>
 8049593:	83 ec 0c             	sub    $0xc,%esp
 8049596:	68 e5 a6 04 08       	push   $0x804a6e5
 804959b:	e8 90 f2 ff ff       	call   8048830 <getenv@plt>
 80495a0:	83 c4 10             	add    $0x10,%esp
 80495a3:	85 c0                	test   %eax,%eax
 80495a5:	74 0a                	je     80495b1 <read_line+0x50>
 80495a7:	83 ec 0c             	sub    $0xc,%esp
 80495aa:	6a 00                	push   $0x0
 80495ac:	e8 bf f2 ff ff       	call   8048870 <exit@plt>
 80495b1:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80495b6:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 80495bb:	e8 fc fd ff ff       	call   80493bc <skip>
 80495c0:	85 c0                	test   %eax,%eax
 80495c2:	75 19                	jne    80495dd <read_line+0x7c>
 80495c4:	83 ec 0c             	sub    $0xc,%esp
 80495c7:	68 c7 a6 04 08       	push   $0x804a6c7
 80495cc:	e8 7f f2 ff ff       	call   8048850 <puts@plt>
 80495d1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80495d8:	e8 93 f2 ff ff       	call   8048870 <exit@plt>
 80495dd:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 80495e3:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80495e6:	c1 e3 04             	shl    $0x4,%ebx
 80495e9:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 80495ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80495f4:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80495f9:	89 df                	mov    %ebx,%edi
 80495fb:	f2 ae                	repnz scas %es:(%edi),%al
 80495fd:	f7 d1                	not    %ecx
 80495ff:	83 e9 01             	sub    $0x1,%ecx
 8049602:	83 f9 4e             	cmp    $0x4e,%ecx
 8049605:	7e 36                	jle    804963d <read_line+0xdc>
 8049607:	83 ec 0c             	sub    $0xc,%esp
 804960a:	68 f0 a6 04 08       	push   $0x804a6f0
 804960f:	e8 3c f2 ff ff       	call   8048850 <puts@plt>
 8049614:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049619:	8d 50 01             	lea    0x1(%eax),%edx
 804961c:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049622:	6b c0 50             	imul   $0x50,%eax,%eax
 8049625:	05 00 d8 04 08       	add    $0x804d800,%eax
 804962a:	be 0b a7 04 08       	mov    $0x804a70b,%esi
 804962f:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049634:	89 c7                	mov    %eax,%edi
 8049636:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049638:	e8 ac fe ff ff       	call   80494e9 <explode_bomb>
 804963d:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049640:	c1 e0 04             	shl    $0x4,%eax
 8049643:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 804964a:	00 
 804964b:	83 c2 01             	add    $0x1,%edx
 804964e:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049654:	89 d8                	mov    %ebx,%eax
 8049656:	5b                   	pop    %ebx
 8049657:	5e                   	pop    %esi
 8049658:	5f                   	pop    %edi
 8049659:	c3                   	ret    

0804965a <phase_defused>:
 804965a:	83 ec 18             	sub    $0x18,%esp
 804965d:	6a 01                	push   $0x1
 804965f:	e8 9d fd ff ff       	call   8049401 <send_msg>
 8049664:	83 c4 10             	add    $0x10,%esp
 8049667:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 804966e:	75 1c                	jne    804968c <phase_defused+0x32>
 8049670:	83 ec 0c             	sub    $0xc,%esp
 8049673:	68 d0 a5 04 08       	push   $0x804a5d0
 8049678:	e8 d3 f1 ff ff       	call   8048850 <puts@plt>
 804967d:	c7 04 24 fc a5 04 08 	movl   $0x804a5fc,(%esp)
 8049684:	e8 c7 f1 ff ff       	call   8048850 <puts@plt>
 8049689:	83 c4 10             	add    $0x10,%esp
 804968c:	83 c4 0c             	add    $0xc,%esp
 804968f:	c3                   	ret    

08049690 <sigalrm_handler>:
 8049690:	83 ec 0c             	sub    $0xc,%esp
 8049693:	6a 00                	push   $0x0
 8049695:	68 04 ab 04 08       	push   $0x804ab04
 804969a:	6a 01                	push   $0x1
 804969c:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 80496a2:	e8 59 f2 ff ff       	call   8048900 <__fprintf_chk@plt>
 80496a7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80496ae:	e8 bd f1 ff ff       	call   8048870 <exit@plt>

080496b3 <rio_readlineb>:
 80496b3:	55                   	push   %ebp
 80496b4:	57                   	push   %edi
 80496b5:	56                   	push   %esi
 80496b6:	53                   	push   %ebx
 80496b7:	83 ec 2c             	sub    $0x2c,%esp
 80496ba:	89 d7                	mov    %edx,%edi
 80496bc:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80496c0:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 80496c7:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80496cb:	31 d2                	xor    %edx,%edx
 80496cd:	83 f9 01             	cmp    $0x1,%ecx
 80496d0:	76 79                	jbe    804974b <rio_readlineb+0x98>
 80496d2:	89 c3                	mov    %eax,%ebx
 80496d4:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80496d8:	bd 01 00 00 00       	mov    $0x1,%ebp
 80496dd:	8d 73 0c             	lea    0xc(%ebx),%esi
 80496e0:	eb 2d                	jmp    804970f <rio_readlineb+0x5c>
 80496e2:	83 ec 04             	sub    $0x4,%esp
 80496e5:	68 00 20 00 00       	push   $0x2000
 80496ea:	56                   	push   %esi
 80496eb:	ff 33                	pushl  (%ebx)
 80496ed:	e8 ae f0 ff ff       	call   80487a0 <read@plt>
 80496f2:	89 43 04             	mov    %eax,0x4(%ebx)
 80496f5:	83 c4 10             	add    $0x10,%esp
 80496f8:	85 c0                	test   %eax,%eax
 80496fa:	79 0c                	jns    8049708 <rio_readlineb+0x55>
 80496fc:	e8 cf f1 ff ff       	call   80488d0 <__errno_location@plt>
 8049701:	83 38 04             	cmpl   $0x4,(%eax)
 8049704:	74 09                	je     804970f <rio_readlineb+0x5c>
 8049706:	eb 62                	jmp    804976a <rio_readlineb+0xb7>
 8049708:	85 c0                	test   %eax,%eax
 804970a:	74 63                	je     804976f <rio_readlineb+0xbc>
 804970c:	89 73 08             	mov    %esi,0x8(%ebx)
 804970f:	8b 43 04             	mov    0x4(%ebx),%eax
 8049712:	85 c0                	test   %eax,%eax
 8049714:	7e cc                	jle    80496e2 <rio_readlineb+0x2f>
 8049716:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049719:	0f b6 11             	movzbl (%ecx),%edx
 804971c:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 8049720:	83 c1 01             	add    $0x1,%ecx
 8049723:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049726:	83 e8 01             	sub    $0x1,%eax
 8049729:	89 43 04             	mov    %eax,0x4(%ebx)
 804972c:	83 c7 01             	add    $0x1,%edi
 804972f:	88 57 ff             	mov    %dl,-0x1(%edi)
 8049732:	80 fa 0a             	cmp    $0xa,%dl
 8049735:	75 09                	jne    8049740 <rio_readlineb+0x8d>
 8049737:	eb 1d                	jmp    8049756 <rio_readlineb+0xa3>
 8049739:	83 fd 01             	cmp    $0x1,%ebp
 804973c:	75 18                	jne    8049756 <rio_readlineb+0xa3>
 804973e:	eb 1b                	jmp    804975b <rio_readlineb+0xa8>
 8049740:	83 c5 01             	add    $0x1,%ebp
 8049743:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049747:	74 09                	je     8049752 <rio_readlineb+0x9f>
 8049749:	eb c4                	jmp    804970f <rio_readlineb+0x5c>
 804974b:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049750:	eb 04                	jmp    8049756 <rio_readlineb+0xa3>
 8049752:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 8049756:	c6 07 00             	movb   $0x0,(%edi)
 8049759:	89 e8                	mov    %ebp,%eax
 804975b:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804975f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049766:	74 17                	je     804977f <rio_readlineb+0xcc>
 8049768:	eb 10                	jmp    804977a <rio_readlineb+0xc7>
 804976a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804976f:	85 c0                	test   %eax,%eax
 8049771:	74 c6                	je     8049739 <rio_readlineb+0x86>
 8049773:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049778:	eb e1                	jmp    804975b <rio_readlineb+0xa8>
 804977a:	e8 81 f0 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804977f:	83 c4 2c             	add    $0x2c,%esp
 8049782:	5b                   	pop    %ebx
 8049783:	5e                   	pop    %esi
 8049784:	5f                   	pop    %edi
 8049785:	5d                   	pop    %ebp
 8049786:	c3                   	ret    

08049787 <submitr>:
 8049787:	55                   	push   %ebp
 8049788:	57                   	push   %edi
 8049789:	56                   	push   %esi
 804978a:	53                   	push   %ebx
 804978b:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 8049791:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 8049798:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 804979f:	89 44 24 10          	mov    %eax,0x10(%esp)
 80497a3:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80497aa:	89 44 24 14          	mov    %eax,0x14(%esp)
 80497ae:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80497b5:	89 44 24 18          	mov    %eax,0x18(%esp)
 80497b9:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 80497c0:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80497c7:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80497cb:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80497d1:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80497d8:	31 c0                	xor    %eax,%eax
 80497da:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80497e1:	00 
 80497e2:	6a 00                	push   $0x0
 80497e4:	6a 01                	push   $0x1
 80497e6:	6a 02                	push   $0x2
 80497e8:	e8 03 f1 ff ff       	call   80488f0 <socket@plt>
 80497ed:	89 44 24 18          	mov    %eax,0x18(%esp)
 80497f1:	83 c4 10             	add    $0x10,%esp
 80497f4:	85 c0                	test   %eax,%eax
 80497f6:	79 52                	jns    804984a <submitr+0xc3>
 80497f8:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497fc:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049802:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049809:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049810:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049817:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804981e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049825:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 804982c:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049833:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 804983a:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 8049840:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049845:	e9 3f 06 00 00       	jmp    8049e89 <submitr+0x702>
 804984a:	83 ec 0c             	sub    $0xc,%esp
 804984d:	56                   	push   %esi
 804984e:	e8 bd f0 ff ff       	call   8048910 <gethostbyname@plt>
 8049853:	83 c4 10             	add    $0x10,%esp
 8049856:	85 c0                	test   %eax,%eax
 8049858:	75 73                	jne    80498cd <submitr+0x146>
 804985a:	8b 44 24 18          	mov    0x18(%esp),%eax
 804985e:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049864:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 804986b:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 8049872:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049879:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049880:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049887:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804988e:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 8049895:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804989c:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80498a3:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80498aa:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80498b0:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80498b4:	83 ec 0c             	sub    $0xc,%esp
 80498b7:	ff 74 24 14          	pushl  0x14(%esp)
 80498bb:	e8 80 f0 ff ff       	call   8048940 <close@plt>
 80498c0:	83 c4 10             	add    $0x10,%esp
 80498c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498c8:	e9 bc 05 00 00       	jmp    8049e89 <submitr+0x702>
 80498cd:	8d 74 24 30          	lea    0x30(%esp),%esi
 80498d1:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80498d8:	00 
 80498d9:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 80498e0:	00 
 80498e1:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 80498e8:	00 
 80498e9:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 80498f0:	00 
 80498f1:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 80498f8:	6a 0c                	push   $0xc
 80498fa:	ff 70 0c             	pushl  0xc(%eax)
 80498fd:	8b 40 10             	mov    0x10(%eax),%eax
 8049900:	ff 30                	pushl  (%eax)
 8049902:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049906:	50                   	push   %eax
 8049907:	e8 54 ef ff ff       	call   8048860 <__memmove_chk@plt>
 804990c:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049913:	00 
 8049914:	66 c1 c8 08          	ror    $0x8,%ax
 8049918:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804991d:	83 c4 0c             	add    $0xc,%esp
 8049920:	6a 10                	push   $0x10
 8049922:	56                   	push   %esi
 8049923:	ff 74 24 14          	pushl  0x14(%esp)
 8049927:	e8 04 f0 ff ff       	call   8048930 <connect@plt>
 804992c:	83 c4 10             	add    $0x10,%esp
 804992f:	85 c0                	test   %eax,%eax
 8049931:	79 65                	jns    8049998 <submitr+0x211>
 8049933:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049937:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804993d:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049944:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 804994b:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 8049952:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 8049959:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 8049960:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 8049967:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 804996e:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049975:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 804997b:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 804997f:	83 ec 0c             	sub    $0xc,%esp
 8049982:	ff 74 24 14          	pushl  0x14(%esp)
 8049986:	e8 b5 ef ff ff       	call   8048940 <close@plt>
 804998b:	83 c4 10             	add    $0x10,%esp
 804998e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049993:	e9 f1 04 00 00       	jmp    8049e89 <submitr+0x702>
 8049998:	be ff ff ff ff       	mov    $0xffffffff,%esi
 804999d:	b8 00 00 00 00       	mov    $0x0,%eax
 80499a2:	89 f1                	mov    %esi,%ecx
 80499a4:	89 df                	mov    %ebx,%edi
 80499a6:	f2 ae                	repnz scas %es:(%edi),%al
 80499a8:	f7 d1                	not    %ecx
 80499aa:	89 cd                	mov    %ecx,%ebp
 80499ac:	89 f1                	mov    %esi,%ecx
 80499ae:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80499b2:	f2 ae                	repnz scas %es:(%edi),%al
 80499b4:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80499b8:	89 f1                	mov    %esi,%ecx
 80499ba:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80499be:	f2 ae                	repnz scas %es:(%edi),%al
 80499c0:	89 ca                	mov    %ecx,%edx
 80499c2:	f7 d2                	not    %edx
 80499c4:	89 f1                	mov    %esi,%ecx
 80499c6:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80499ca:	f2 ae                	repnz scas %es:(%edi),%al
 80499cc:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 80499d0:	29 ca                	sub    %ecx,%edx
 80499d2:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 80499d6:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80499da:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80499df:	76 7e                	jbe    8049a5f <submitr+0x2d8>
 80499e1:	8b 44 24 18          	mov    0x18(%esp),%eax
 80499e5:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80499eb:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 80499f2:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 80499f9:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049a00:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049a07:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049a0e:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049a15:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049a1c:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049a23:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049a2a:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 8049a31:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049a38:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049a3f:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049a46:	83 ec 0c             	sub    $0xc,%esp
 8049a49:	ff 74 24 14          	pushl  0x14(%esp)
 8049a4d:	e8 ee ee ff ff       	call   8048940 <close@plt>
 8049a52:	83 c4 10             	add    $0x10,%esp
 8049a55:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a5a:	e9 2a 04 00 00       	jmp    8049e89 <submitr+0x702>
 8049a5f:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 8049a66:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049a6b:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a70:	89 d7                	mov    %edx,%edi
 8049a72:	f3 ab                	rep stos %eax,%es:(%edi)
 8049a74:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049a79:	89 df                	mov    %ebx,%edi
 8049a7b:	f2 ae                	repnz scas %es:(%edi),%al
 8049a7d:	f7 d1                	not    %ecx
 8049a7f:	89 ce                	mov    %ecx,%esi
 8049a81:	83 ee 01             	sub    $0x1,%esi
 8049a84:	0f 84 5c 04 00 00    	je     8049ee6 <submitr+0x75f>
 8049a8a:	89 d5                	mov    %edx,%ebp
 8049a8c:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 8049a91:	0f b6 13             	movzbl (%ebx),%edx
 8049a94:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 8049a97:	b8 01 00 00 00       	mov    $0x1,%eax
 8049a9c:	80 f9 0f             	cmp    $0xf,%cl
 8049a9f:	77 0a                	ja     8049aab <submitr+0x324>
 8049aa1:	89 f8                	mov    %edi,%eax
 8049aa3:	d3 e8                	shr    %cl,%eax
 8049aa5:	83 f0 01             	xor    $0x1,%eax
 8049aa8:	83 e0 01             	and    $0x1,%eax
 8049aab:	80 fa 5f             	cmp    $0x5f,%dl
 8049aae:	0f 94 c1             	sete   %cl
 8049ab1:	38 c1                	cmp    %al,%cl
 8049ab3:	73 0c                	jae    8049ac1 <submitr+0x33a>
 8049ab5:	89 d0                	mov    %edx,%eax
 8049ab7:	83 e0 df             	and    $0xffffffdf,%eax
 8049aba:	83 e8 41             	sub    $0x41,%eax
 8049abd:	3c 19                	cmp    $0x19,%al
 8049abf:	77 08                	ja     8049ac9 <submitr+0x342>
 8049ac1:	88 55 00             	mov    %dl,0x0(%ebp)
 8049ac4:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049ac7:	eb 62                	jmp    8049b2b <submitr+0x3a4>
 8049ac9:	80 fa 20             	cmp    $0x20,%dl
 8049acc:	75 09                	jne    8049ad7 <submitr+0x350>
 8049ace:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049ad2:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049ad5:	eb 54                	jmp    8049b2b <submitr+0x3a4>
 8049ad7:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049ada:	3c 5f                	cmp    $0x5f,%al
 8049adc:	76 09                	jbe    8049ae7 <submitr+0x360>
 8049ade:	80 fa 09             	cmp    $0x9,%dl
 8049ae1:	0f 85 bb 03 00 00    	jne    8049ea2 <submitr+0x71b>
 8049ae7:	83 ec 0c             	sub    $0xc,%esp
 8049aea:	0f b6 d2             	movzbl %dl,%edx
 8049aed:	52                   	push   %edx
 8049aee:	68 10 ac 04 08       	push   $0x804ac10
 8049af3:	6a 08                	push   $0x8
 8049af5:	6a 01                	push   $0x1
 8049af7:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049afe:	50                   	push   %eax
 8049aff:	e8 5c ee ff ff       	call   8048960 <__sprintf_chk@plt>
 8049b04:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049b0b:	00 
 8049b0c:	88 45 00             	mov    %al,0x0(%ebp)
 8049b0f:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049b16:	00 
 8049b17:	88 45 01             	mov    %al,0x1(%ebp)
 8049b1a:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049b21:	00 
 8049b22:	88 45 02             	mov    %al,0x2(%ebp)
 8049b25:	83 c4 20             	add    $0x20,%esp
 8049b28:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049b2b:	83 c3 01             	add    $0x1,%ebx
 8049b2e:	83 ee 01             	sub    $0x1,%esi
 8049b31:	0f 85 5a ff ff ff    	jne    8049a91 <submitr+0x30a>
 8049b37:	e9 aa 03 00 00       	jmp    8049ee6 <submitr+0x75f>
 8049b3c:	83 ec 04             	sub    $0x4,%esp
 8049b3f:	53                   	push   %ebx
 8049b40:	56                   	push   %esi
 8049b41:	55                   	push   %ebp
 8049b42:	e8 49 ed ff ff       	call   8048890 <write@plt>
 8049b47:	83 c4 10             	add    $0x10,%esp
 8049b4a:	85 c0                	test   %eax,%eax
 8049b4c:	7f 0f                	jg     8049b5d <submitr+0x3d6>
 8049b4e:	e8 7d ed ff ff       	call   80488d0 <__errno_location@plt>
 8049b53:	83 38 04             	cmpl   $0x4,(%eax)
 8049b56:	75 0f                	jne    8049b67 <submitr+0x3e0>
 8049b58:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b5d:	01 c6                	add    %eax,%esi
 8049b5f:	29 c3                	sub    %eax,%ebx
 8049b61:	75 d9                	jne    8049b3c <submitr+0x3b5>
 8049b63:	85 ff                	test   %edi,%edi
 8049b65:	79 69                	jns    8049bd0 <submitr+0x449>
 8049b67:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b6b:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b71:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b78:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b7f:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b86:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b8d:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b94:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049b9b:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049ba2:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049ba9:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049bb0:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049bb7:	83 ec 0c             	sub    $0xc,%esp
 8049bba:	ff 74 24 14          	pushl  0x14(%esp)
 8049bbe:	e8 7d ed ff ff       	call   8048940 <close@plt>
 8049bc3:	83 c4 10             	add    $0x10,%esp
 8049bc6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049bcb:	e9 b9 02 00 00       	jmp    8049e89 <submitr+0x702>
 8049bd0:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049bd4:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049bd8:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049bdf:	00 
 8049be0:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049be4:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049be8:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049bed:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049bf4:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049bf8:	e8 b6 fa ff ff       	call   80496b3 <rio_readlineb>
 8049bfd:	85 c0                	test   %eax,%eax
 8049bff:	7f 7d                	jg     8049c7e <submitr+0x4f7>
 8049c01:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c05:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c0b:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c12:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049c19:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049c20:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049c27:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049c2e:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049c35:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049c3c:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049c43:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049c4a:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049c51:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049c58:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049c5f:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049c65:	83 ec 0c             	sub    $0xc,%esp
 8049c68:	ff 74 24 14          	pushl  0x14(%esp)
 8049c6c:	e8 cf ec ff ff       	call   8048940 <close@plt>
 8049c71:	83 c4 10             	add    $0x10,%esp
 8049c74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c79:	e9 0b 02 00 00       	jmp    8049e89 <submitr+0x702>
 8049c7e:	83 ec 0c             	sub    $0xc,%esp
 8049c81:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049c88:	50                   	push   %eax
 8049c89:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c8d:	50                   	push   %eax
 8049c8e:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049c95:	50                   	push   %eax
 8049c96:	68 17 ac 04 08       	push   $0x804ac17
 8049c9b:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049ca2:	50                   	push   %eax
 8049ca3:	e8 08 ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049ca8:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049cac:	83 c4 20             	add    $0x20,%esp
 8049caf:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049cb4:	0f 84 c4 00 00 00    	je     8049d7e <submitr+0x5f7>
 8049cba:	83 ec 08             	sub    $0x8,%esp
 8049cbd:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049cc4:	52                   	push   %edx
 8049cc5:	50                   	push   %eax
 8049cc6:	68 28 ab 04 08       	push   $0x804ab28
 8049ccb:	6a ff                	push   $0xffffffff
 8049ccd:	6a 01                	push   $0x1
 8049ccf:	ff 74 24 34          	pushl  0x34(%esp)
 8049cd3:	e8 88 ec ff ff       	call   8048960 <__sprintf_chk@plt>
 8049cd8:	83 c4 14             	add    $0x14,%esp
 8049cdb:	ff 74 24 14          	pushl  0x14(%esp)
 8049cdf:	e8 5c ec ff ff       	call   8048940 <close@plt>
 8049ce4:	83 c4 10             	add    $0x10,%esp
 8049ce7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cec:	e9 98 01 00 00       	jmp    8049e89 <submitr+0x702>
 8049cf1:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049cf6:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049cfd:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049d01:	e8 ad f9 ff ff       	call   80496b3 <rio_readlineb>
 8049d06:	85 c0                	test   %eax,%eax
 8049d08:	7f 74                	jg     8049d7e <submitr+0x5f7>
 8049d0a:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d0e:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049d14:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049d1b:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049d22:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049d29:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d30:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d37:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d3e:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049d45:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049d4c:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049d53:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049d5a:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049d61:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049d65:	83 ec 0c             	sub    $0xc,%esp
 8049d68:	ff 74 24 14          	pushl  0x14(%esp)
 8049d6c:	e8 cf eb ff ff       	call   8048940 <close@plt>
 8049d71:	83 c4 10             	add    $0x10,%esp
 8049d74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d79:	e9 0b 01 00 00       	jmp    8049e89 <submitr+0x702>
 8049d7e:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049d85:	0d 
 8049d86:	0f 85 65 ff ff ff    	jne    8049cf1 <submitr+0x56a>
 8049d8c:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049d93:	0a 
 8049d94:	0f 85 57 ff ff ff    	jne    8049cf1 <submitr+0x56a>
 8049d9a:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049da1:	00 
 8049da2:	0f 85 49 ff ff ff    	jne    8049cf1 <submitr+0x56a>
 8049da8:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049dad:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049db4:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049db8:	e8 f6 f8 ff ff       	call   80496b3 <rio_readlineb>
 8049dbd:	85 c0                	test   %eax,%eax
 8049dbf:	7f 7b                	jg     8049e3c <submitr+0x6b5>
 8049dc1:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049dc5:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049dcb:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049dd2:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049dd9:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049de0:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049de7:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049dee:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049df5:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049dfc:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049e03:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049e0a:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049e11:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049e18:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049e1f:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049e26:	83 ec 0c             	sub    $0xc,%esp
 8049e29:	ff 74 24 14          	pushl  0x14(%esp)
 8049e2d:	e8 0e eb ff ff       	call   8048940 <close@plt>
 8049e32:	83 c4 10             	add    $0x10,%esp
 8049e35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e3a:	eb 4d                	jmp    8049e89 <submitr+0x702>
 8049e3c:	83 ec 08             	sub    $0x8,%esp
 8049e3f:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049e46:	50                   	push   %eax
 8049e47:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049e4b:	57                   	push   %edi
 8049e4c:	e8 bf e9 ff ff       	call   8048810 <strcpy@plt>
 8049e51:	83 c4 04             	add    $0x4,%esp
 8049e54:	ff 74 24 14          	pushl  0x14(%esp)
 8049e58:	e8 e3 ea ff ff       	call   8048940 <close@plt>
 8049e5d:	0f b6 17             	movzbl (%edi),%edx
 8049e60:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049e65:	83 c4 10             	add    $0x10,%esp
 8049e68:	29 d0                	sub    %edx,%eax
 8049e6a:	75 13                	jne    8049e7f <submitr+0x6f8>
 8049e6c:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049e70:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049e75:	29 d0                	sub    %edx,%eax
 8049e77:	75 06                	jne    8049e7f <submitr+0x6f8>
 8049e79:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049e7d:	f7 d8                	neg    %eax
 8049e7f:	85 c0                	test   %eax,%eax
 8049e81:	0f 95 c0             	setne  %al
 8049e84:	0f b6 c0             	movzbl %al,%eax
 8049e87:	f7 d8                	neg    %eax
 8049e89:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049e90:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049e97:	0f 84 a9 00 00 00    	je     8049f46 <submitr+0x7bf>
 8049e9d:	e9 9f 00 00 00       	jmp    8049f41 <submitr+0x7ba>
 8049ea2:	a1 58 ab 04 08       	mov    0x804ab58,%eax
 8049ea7:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049eab:	89 07                	mov    %eax,(%edi)
 8049ead:	a1 97 ab 04 08       	mov    0x804ab97,%eax
 8049eb2:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049eb5:	89 f8                	mov    %edi,%eax
 8049eb7:	83 c7 04             	add    $0x4,%edi
 8049eba:	83 e7 fc             	and    $0xfffffffc,%edi
 8049ebd:	29 f8                	sub    %edi,%eax
 8049ebf:	be 58 ab 04 08       	mov    $0x804ab58,%esi
 8049ec4:	29 c6                	sub    %eax,%esi
 8049ec6:	83 c0 43             	add    $0x43,%eax
 8049ec9:	c1 e8 02             	shr    $0x2,%eax
 8049ecc:	89 c1                	mov    %eax,%ecx
 8049ece:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049ed0:	83 ec 0c             	sub    $0xc,%esp
 8049ed3:	ff 74 24 14          	pushl  0x14(%esp)
 8049ed7:	e8 64 ea ff ff       	call   8048940 <close@plt>
 8049edc:	83 c4 10             	add    $0x10,%esp
 8049edf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ee4:	eb a3                	jmp    8049e89 <submitr+0x702>
 8049ee6:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049eed:	50                   	push   %eax
 8049eee:	ff 74 24 18          	pushl  0x18(%esp)
 8049ef2:	ff 74 24 18          	pushl  0x18(%esp)
 8049ef6:	ff 74 24 18          	pushl  0x18(%esp)
 8049efa:	68 9c ab 04 08       	push   $0x804ab9c
 8049eff:	68 00 20 00 00       	push   $0x2000
 8049f04:	6a 01                	push   $0x1
 8049f06:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049f0d:	57                   	push   %edi
 8049f0e:	e8 4d ea ff ff       	call   8048960 <__sprintf_chk@plt>
 8049f13:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f18:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049f1d:	f2 ae                	repnz scas %es:(%edi),%al
 8049f1f:	f7 d1                	not    %ecx
 8049f21:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049f24:	83 c4 20             	add    $0x20,%esp
 8049f27:	89 fb                	mov    %edi,%ebx
 8049f29:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049f30:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049f34:	85 ff                	test   %edi,%edi
 8049f36:	0f 85 00 fc ff ff    	jne    8049b3c <submitr+0x3b5>
 8049f3c:	e9 8f fc ff ff       	jmp    8049bd0 <submitr+0x449>
 8049f41:	e8 ba e8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049f46:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049f4c:	5b                   	pop    %ebx
 8049f4d:	5e                   	pop    %esi
 8049f4e:	5f                   	pop    %edi
 8049f4f:	5d                   	pop    %ebp
 8049f50:	c3                   	ret    

08049f51 <init_timeout>:
 8049f51:	53                   	push   %ebx
 8049f52:	83 ec 08             	sub    $0x8,%esp
 8049f55:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049f59:	85 db                	test   %ebx,%ebx
 8049f5b:	74 24                	je     8049f81 <init_timeout+0x30>
 8049f5d:	83 ec 08             	sub    $0x8,%esp
 8049f60:	68 90 96 04 08       	push   $0x8049690
 8049f65:	6a 0e                	push   $0xe
 8049f67:	e8 64 e8 ff ff       	call   80487d0 <signal@plt>
 8049f6c:	85 db                	test   %ebx,%ebx
 8049f6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f73:	0f 48 d8             	cmovs  %eax,%ebx
 8049f76:	89 1c 24             	mov    %ebx,(%esp)
 8049f79:	e8 72 e8 ff ff       	call   80487f0 <alarm@plt>
 8049f7e:	83 c4 10             	add    $0x10,%esp
 8049f81:	83 c4 08             	add    $0x8,%esp
 8049f84:	5b                   	pop    %ebx
 8049f85:	c3                   	ret    

08049f86 <init_driver>:
 8049f86:	57                   	push   %edi
 8049f87:	56                   	push   %esi
 8049f88:	53                   	push   %ebx
 8049f89:	83 ec 28             	sub    $0x28,%esp
 8049f8c:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049f90:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049f96:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049f9a:	31 c0                	xor    %eax,%eax
 8049f9c:	6a 01                	push   $0x1
 8049f9e:	6a 0d                	push   $0xd
 8049fa0:	e8 2b e8 ff ff       	call   80487d0 <signal@plt>
 8049fa5:	83 c4 08             	add    $0x8,%esp
 8049fa8:	6a 01                	push   $0x1
 8049faa:	6a 1d                	push   $0x1d
 8049fac:	e8 1f e8 ff ff       	call   80487d0 <signal@plt>
 8049fb1:	83 c4 08             	add    $0x8,%esp
 8049fb4:	6a 01                	push   $0x1
 8049fb6:	6a 1d                	push   $0x1d
 8049fb8:	e8 13 e8 ff ff       	call   80487d0 <signal@plt>
 8049fbd:	83 c4 0c             	add    $0xc,%esp
 8049fc0:	6a 00                	push   $0x0
 8049fc2:	6a 01                	push   $0x1
 8049fc4:	6a 02                	push   $0x2
 8049fc6:	e8 25 e9 ff ff       	call   80488f0 <socket@plt>
 8049fcb:	83 c4 10             	add    $0x10,%esp
 8049fce:	85 c0                	test   %eax,%eax
 8049fd0:	79 4e                	jns    804a020 <init_driver+0x9a>
 8049fd2:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049fd8:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049fdf:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049fe6:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049fed:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049ff4:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049ffb:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 804a002:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 804a009:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 804a010:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 804a016:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a01b:	e9 1f 01 00 00       	jmp    804a13f <init_driver+0x1b9>
 804a020:	89 c3                	mov    %eax,%ebx
 804a022:	83 ec 0c             	sub    $0xc,%esp
 804a025:	68 28 ac 04 08       	push   $0x804ac28
 804a02a:	e8 e1 e8 ff ff       	call   8048910 <gethostbyname@plt>
 804a02f:	83 c4 10             	add    $0x10,%esp
 804a032:	85 c0                	test   %eax,%eax
 804a034:	75 6c                	jne    804a0a2 <init_driver+0x11c>
 804a036:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 804a03c:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 804a043:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 804a04a:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 804a051:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a058:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a05f:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 804a066:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 804a06d:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 804a074:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 804a07b:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 804a082:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a088:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a08c:	83 ec 0c             	sub    $0xc,%esp
 804a08f:	53                   	push   %ebx
 804a090:	e8 ab e8 ff ff       	call   8048940 <close@plt>
 804a095:	83 c4 10             	add    $0x10,%esp
 804a098:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a09d:	e9 9d 00 00 00       	jmp    804a13f <init_driver+0x1b9>
 804a0a2:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 804a0a6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a0ad:	00 
 804a0ae:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a0b5:	00 
 804a0b6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a0bd:	00 
 804a0be:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a0c5:	00 
 804a0c6:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 804a0cd:	6a 0c                	push   $0xc
 804a0cf:	ff 70 0c             	pushl  0xc(%eax)
 804a0d2:	8b 40 10             	mov    0x10(%eax),%eax
 804a0d5:	ff 30                	pushl  (%eax)
 804a0d7:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804a0db:	50                   	push   %eax
 804a0dc:	e8 7f e7 ff ff       	call   8048860 <__memmove_chk@plt>
 804a0e1:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a0e8:	83 c4 0c             	add    $0xc,%esp
 804a0eb:	6a 10                	push   $0x10
 804a0ed:	57                   	push   %edi
 804a0ee:	53                   	push   %ebx
 804a0ef:	e8 3c e8 ff ff       	call   8048930 <connect@plt>
 804a0f4:	83 c4 10             	add    $0x10,%esp
 804a0f7:	85 c0                	test   %eax,%eax
 804a0f9:	79 2a                	jns    804a125 <init_driver+0x19f>
 804a0fb:	83 ec 0c             	sub    $0xc,%esp
 804a0fe:	68 28 ac 04 08       	push   $0x804ac28
 804a103:	68 e8 ab 04 08       	push   $0x804abe8
 804a108:	6a ff                	push   $0xffffffff
 804a10a:	6a 01                	push   $0x1
 804a10c:	56                   	push   %esi
 804a10d:	e8 4e e8 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a112:	83 c4 14             	add    $0x14,%esp
 804a115:	53                   	push   %ebx
 804a116:	e8 25 e8 ff ff       	call   8048940 <close@plt>
 804a11b:	83 c4 10             	add    $0x10,%esp
 804a11e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a123:	eb 1a                	jmp    804a13f <init_driver+0x1b9>
 804a125:	83 ec 0c             	sub    $0xc,%esp
 804a128:	53                   	push   %ebx
 804a129:	e8 12 e8 ff ff       	call   8048940 <close@plt>
 804a12e:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a133:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a137:	83 c4 10             	add    $0x10,%esp
 804a13a:	b8 00 00 00 00       	mov    $0x0,%eax
 804a13f:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a143:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a14a:	74 05                	je     804a151 <init_driver+0x1cb>
 804a14c:	e8 af e6 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a151:	83 c4 20             	add    $0x20,%esp
 804a154:	5b                   	pop    %ebx
 804a155:	5e                   	pop    %esi
 804a156:	5f                   	pop    %edi
 804a157:	c3                   	ret    

0804a158 <driver_post>:
 804a158:	53                   	push   %ebx
 804a159:	83 ec 08             	sub    $0x8,%esp
 804a15c:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a160:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a164:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a169:	74 26                	je     804a191 <driver_post+0x39>
 804a16b:	83 ec 04             	sub    $0x4,%esp
 804a16e:	ff 74 24 18          	pushl  0x18(%esp)
 804a172:	68 3d ac 04 08       	push   $0x804ac3d
 804a177:	6a 01                	push   $0x1
 804a179:	e8 62 e7 ff ff       	call   80488e0 <__printf_chk@plt>
 804a17e:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a183:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a187:	83 c4 10             	add    $0x10,%esp
 804a18a:	b8 00 00 00 00       	mov    $0x0,%eax
 804a18f:	eb 3e                	jmp    804a1cf <driver_post+0x77>
 804a191:	85 c0                	test   %eax,%eax
 804a193:	74 2c                	je     804a1c1 <driver_post+0x69>
 804a195:	80 38 00             	cmpb   $0x0,(%eax)
 804a198:	74 27                	je     804a1c1 <driver_post+0x69>
 804a19a:	83 ec 04             	sub    $0x4,%esp
 804a19d:	53                   	push   %ebx
 804a19e:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a1a2:	68 54 ac 04 08       	push   $0x804ac54
 804a1a7:	50                   	push   %eax
 804a1a8:	68 5b ac 04 08       	push   $0x804ac5b
 804a1ad:	68 31 43 00 00       	push   $0x4331
 804a1b2:	68 28 ac 04 08       	push   $0x804ac28
 804a1b7:	e8 cb f5 ff ff       	call   8049787 <submitr>
 804a1bc:	83 c4 20             	add    $0x20,%esp
 804a1bf:	eb 0e                	jmp    804a1cf <driver_post+0x77>
 804a1c1:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a1c6:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a1ca:	b8 00 00 00 00       	mov    $0x0,%eax
 804a1cf:	83 c4 08             	add    $0x8,%esp
 804a1d2:	5b                   	pop    %ebx
 804a1d3:	c3                   	ret    
 804a1d4:	66 90                	xchg   %ax,%ax
 804a1d6:	66 90                	xchg   %ax,%ax
 804a1d8:	66 90                	xchg   %ax,%ax
 804a1da:	66 90                	xchg   %ax,%ax
 804a1dc:	66 90                	xchg   %ax,%ax
 804a1de:	66 90                	xchg   %ax,%ax

0804a1e0 <__libc_csu_init>:
 804a1e0:	55                   	push   %ebp
 804a1e1:	57                   	push   %edi
 804a1e2:	56                   	push   %esi
 804a1e3:	53                   	push   %ebx
 804a1e4:	e8 c7 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a1e9:	81 c3 17 2e 00 00    	add    $0x2e17,%ebx
 804a1ef:	83 ec 0c             	sub    $0xc,%esp
 804a1f2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a1f6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a1fc:	e8 5f e5 ff ff       	call   8048760 <_init>
 804a201:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a207:	29 c6                	sub    %eax,%esi
 804a209:	c1 fe 02             	sar    $0x2,%esi
 804a20c:	85 f6                	test   %esi,%esi
 804a20e:	74 25                	je     804a235 <__libc_csu_init+0x55>
 804a210:	31 ff                	xor    %edi,%edi
 804a212:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a218:	83 ec 04             	sub    $0x4,%esp
 804a21b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a21f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a223:	55                   	push   %ebp
 804a224:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a22b:	83 c7 01             	add    $0x1,%edi
 804a22e:	83 c4 10             	add    $0x10,%esp
 804a231:	39 f7                	cmp    %esi,%edi
 804a233:	75 e3                	jne    804a218 <__libc_csu_init+0x38>
 804a235:	83 c4 0c             	add    $0xc,%esp
 804a238:	5b                   	pop    %ebx
 804a239:	5e                   	pop    %esi
 804a23a:	5f                   	pop    %edi
 804a23b:	5d                   	pop    %ebp
 804a23c:	c3                   	ret    
 804a23d:	8d 76 00             	lea    0x0(%esi),%esi

0804a240 <__libc_csu_fini>:
 804a240:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a244 <_fini>:
 804a244:	53                   	push   %ebx
 804a245:	83 ec 08             	sub    $0x8,%esp
 804a248:	e8 63 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a24d:	81 c3 b3 2d 00 00    	add    $0x2db3,%ebx
 804a253:	83 c4 08             	add    $0x8,%esp
 804a256:	5b                   	pop    %ebx
 804a257:	c3                   	ret    
